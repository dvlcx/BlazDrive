@page "/signup"
@layout AuthLayout
@rendermode InteractiveServer
@inject AccountMainService _accountMainService
@inject NavigationManager _navigationManager

<PageTitle>Sign Up</PageTitle>
<EditForm Model="UserSignUp" OnValidSubmit="SignUpClick" class="vh-100 bg-secondary">
   <div class="mask d-flex align-items-center h-100 gradient-custom-3">
      <div class="container h-100">
         <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-12 col-md-9 col-lg-7 col-xl-6">
               <div class="card" style="border-radius: 15px;">
                  <div class="card-body p-3">
                     <h2 class="text-uppercase text-center mb-5">Create an account</h2>
                     @if(!_isSignUpSuccesful)
                     {
                        <h3 class="text-danger text-center"><p>Sorry, we are unable to create your account right now. Please try again later.</p></h3>
                     }
                     <DataAnnotationsValidator />
                     <div class="mb-3">
                        <label for="Name" class="form-label">Name</label>
                        <InputText @bind-Value=UserSignUp.Name class="form-control" />
                        <ValidationMessage For="() => UserSignUp.Name" />
                     </div>
                     <div class="mb-3">
                        <label for="EmailAddress" class="form-label">Email Address</label>
                        <InputText @bind-Value=UserSignUp.Email class="form-control" />
                        @{if(!_isEmailUnique) {<label class="text-danger">This email is already used.</label>}}
                        <ValidationMessage For="() => UserSignUp.Email" />
                     </div>
                     <div class="mb-3">
                        <label for="Password" class="form-label">Password</label>
                        <InputText type="password" @bind-Value=UserSignUp.Password class="form-control" />
                        <ValidationMessage For="() => UserSignUp.Password" />
                     </div>
                     <div class="mb-3">
                        <label for="Password2" class="form-label">Enter your password again</label>
                        <InputText type="password" @bind-Value=UserSignUp.Password2 class="form-control" />
                        <ValidationMessage For="() => UserSignUp.Password2" />
                     </div>
                     <div class="form-check d-flex justify-content-center mb-3">
                        <input class="form-check-input me-2" type="checkbox" @bind="_isCheckedTerms" />
                        <label class="form-check-label">
                        I agree all statements in <a href="/terms" class="text-body">Terms of service</a>
                        </label>
                     </div>
                     <div class="mb-3 d-flex justify-content-center">
                        <button type="submit" class="btn btn-primary" disabled="@(!_isCheckedTerms)">Submit</button>
                     </div>
                     <p class="text-center text-muted mt-3 mb-0">Already have an account? <a href="/login"
                        class="fw-bold text-body"><u>Login here</u></a></p>
                     <p class="text-center mt-3"><a href="/" class="fw-bold text-center text-body"><u>Home</u></a></p>
                  </div>
               </div>
            </div>
         </div>
      </div>
   </div>
</EditForm>

@code
{
   private UserSignUp UserSignUp { get; set; } = new();

   private bool _isEmailUnique { get; set; } = true;
   private bool _isCheckedTerms { get; set; }
   private bool _isSignUpSuccesful { get; set; } = true;

   private async Task SignUpClick()
   {
      if (await _accountMainService.CheckEmail(UserSignUp.Email))
      {
         _isEmailUnique = false;
         return;
      }
      _isEmailUnique = true;
      var key = await _accountMainService.SignUp(UserSignUp.Name, UserSignUp.Email, UserSignUp.Password);
      if (key is not null) _navigationManager.NavigateTo($"/login/{key}");
      else _isSignUpSuccesful = false;
   }
}