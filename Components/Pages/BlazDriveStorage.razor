@page "/blazdrive"  
@layout EmptyLayout
@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@inject AccountInfoService _accountInfoService
@inject BlazDriveStorageService _blazDriveService
@inject NavigationManager _navigation
@rendermode @(new InteractiveServerRenderMode(false))
@using Blazorise.TreeView
@using Blazorise

<link href="_content/Blazorise.TreeView/blazorise.treeview.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
<link href="_content/Blazorise.Icons.FontAwesome/v6/css/all.min.css" rel="stylesheet">

<link rel="stylesheet" href="BlazDriveStorage.css?" />
<NavBar />
@if (_renderReady)
{
            <div class="modal" tabindex="-1" role="dialog" style="display:@_showFolderModal;">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-heade text-centerr">
                        <h5 class="modal-title">@_modalState</h5>
                    </div>
                    <div class="modal-body">
                        <p>Modal body text goes here.</p>
                        <TreeView Nodes="_storage.Folders.Where(x => x.ParentFolderId is null)"
                                GetChildNodes="@(item => _storage.Folders.Where(x => x.ParentFolderId == item.Id).Where(x => !x.IsSelected).ToList())"
                                HasChildNodes="@(item => _storage.Folders.Where(x => x.ParentFolderId == item.Id).Any() == true)"
                                @bind-SelectedNode="_destinationFolder"
                                @bind-ExpandedNodes="_expandedNodes">
                            <NodeContent>
                                <Blazorise.Icon Name="IconName.Folder" />
                                @context.Name
                            </NodeContent>
                        </TreeView>
                    </div>
                    <div class="modal-footer">
                        @if (_modalState is ModalState.Copy && _destinationFolder is not null)
                        {
                            <button type="button" class="btn btn-primary" @onclick="@(() => CopySelected(_destinationFolder.Id))">@_modalState</button>
                        }
                        else if (_modalState is ModalState.Move && _destinationFolder is not null)
                        {
                            <button type="button" class="btn btn-primary" @onclick="@(() => MoveSelected(_destinationFolder.Id))">@_modalState</button>
                        }
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="@HideFolderModal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    <div class="container flex-grow-1 light-style container-p-y">
        <div class="container-m-nx container-m-ny bg-lightest mb-3">
            <ol class="breadcrumb text-big container-p-x py-3 m-0">
                @foreach (var f in _currentPath)
                {
                    <li class="breadcrumb-item">
                        <a href="/blazdrive" @onclick="@(() => ChangeCurrentFolder(f))" style="text-decoration: $link-hover-decoration;">@f.Name</a>
                    </li>
                }

                <li class="breadcrumb-item active">@_currentFolder.Name</li>
            </ol>

            <hr class="m-0" />

            <div class="file-manager-actions container-p-x py-2">
                <div>
                    <label type="button" class="btn btn-primary me-2" for="fileUpload">
                        <svg width="20px" height="20px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M6.3414 6.15897C7.16507 3.73597 9.38755 2 12 2C15.3137 2 18 4.79305 18 8.23846C20.2091 8.23846 22 10.1005 22 12.3974C22 13.9368 21.1956 15.2809 20 16M6.32069 6.20644C3.8806 6.55106 2 8.72597 2 11.3576C2 13.0582 2.7854 14.5682 3.99965 15.5167" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M8 16L12 12M12 12L16 16M12 12V22" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        Upload
                    </label>
                        <InputFile id="fileUpload" OnChange="@LoadFiles" hidden multiple/>
                    <button type="button" class="btn btn-secondary icon-btn me-2" disabled="">
                        <svg width="20px" height="20px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M6.3414 6.15897C7.16507 3.73597 9.38755 2 12 2C15.3137 2 18 4.79305 18 8.23846C20.2091 8.23846 22 10.1005 22 12.3974C22 13.9368 21.1956 15.2809 20 16M6.32069 6.20644C3.8806 6.55106 2 8.72597 2 11.3576C2 13.0582 2.7854 14.5682 3.99965 15.5167" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M8 18L12 22M12 22L16 18M12 22V12" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                    </button>
                    <button onclick="@ShowNewFolderNameField" type="button" class="btn btn-secondary icon-btn me-2">
                        <svg width="20px" height="20px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M6.85929 1.25001C6.88904 1.25001 6.91919 1.25002 6.94976 1.25002L6.98675 1.25001C7.33818 1.24999 7.56433 1.24998 7.78542 1.27065C8.7367 1.35961 9.63905 1.73337 10.3746 2.34313C10.5456 2.48485 10.7055 2.64477 10.954 2.89329L11.5303 3.46969C12.3761 4.3154 12.7012 4.6311 13.0768 4.84005C13.2948 4.96134 13.526 5.05713 13.766 5.12552C14.1793 5.24333 14.6324 5.25002 15.8284 5.25002L16.253 5.25002C17.526 5.25 18.5521 5.24998 19.364 5.35206C20.2054 5.45784 20.9204 5.68358 21.5077 6.21185C21.6061 6.30032 21.6997 6.39394 21.7882 6.49231C22.3165 7.07965 22.5422 7.79459 22.648 8.63601C22.75 9.4479 22.75 10.4741 22.75 11.747V14.0564C22.75 15.8942 22.75 17.3498 22.5969 18.489C22.4393 19.6615 22.1071 20.6104 21.3588 21.3588C20.6104 22.1071 19.6615 22.4393 18.489 22.5969C17.3498 22.75 15.8942 22.75 14.0564 22.75H9.94361C8.10584 22.75 6.65021 22.75 5.51099 22.5969C4.33857 22.4393 3.38962 22.1071 2.64126 21.3588C1.8929 20.6104 1.56078 19.6615 1.40315 18.489C1.24999 17.3498 1.25 15.8942 1.25002 14.0564L1.25002 6.94976C1.25002 6.91919 1.25001 6.88904 1.25001 6.85929C1.2499 6.06338 1.24982 5.55685 1.33237 5.11935C1.6949 3.19788 3.19788 1.6949 5.11935 1.33237C5.55685 1.24982 6.06338 1.2499 6.85929 1.25001ZM6.94976 2.75002C6.03312 2.75002 5.67873 2.75329 5.39746 2.80636C4.08277 3.05441 3.05441 4.08277 2.80636 5.39746C2.75329 5.67873 2.75002 6.03312 2.75002 6.94976V14C2.75002 15.9068 2.75161 17.2615 2.88978 18.2892C3.02504 19.2953 3.27871 19.8749 3.70192 20.2981C4.12513 20.7213 4.70478 20.975 5.71087 21.1103C6.73853 21.2484 8.0932 21.25 10 21.25H14C15.9068 21.25 17.2615 21.2484 18.2892 21.1103C19.2953 20.975 19.8749 20.7213 20.2981 20.2981C20.7213 19.8749 20.975 19.2953 21.1103 18.2892C21.2484 17.2615 21.25 15.9068 21.25 14V11.7979C21.25 10.4621 21.2486 9.5305 21.1597 8.82312C21.0731 8.13448 20.9141 7.76356 20.6729 7.49539C20.6198 7.43637 20.5637 7.3802 20.5046 7.32712C20.2365 7.08592 19.8656 6.92692 19.1769 6.84034C18.4695 6.75141 17.538 6.75002 16.2021 6.75002H15.8284C15.7912 6.75002 15.7545 6.75002 15.7182 6.75003C14.6702 6.75025 13.9944 6.75038 13.3548 6.56806C13.0041 6.46811 12.6661 6.32811 12.3475 6.15083C11.7663 5.82747 11.2885 5.3495 10.5476 4.60833C10.522 4.58265 10.496 4.55666 10.4697 4.53035L9.91943 3.98009C9.63616 3.69682 9.52778 3.58951 9.41731 3.49793C8.91403 3.08073 8.29664 2.825 7.64576 2.76413C7.50289 2.75077 7.35038 2.75002 6.94976 2.75002ZM12 11.25C12.4142 11.25 12.75 11.5858 12.75 12V13.25H14C14.4142 13.25 14.75 13.5858 14.75 14C14.75 14.4142 14.4142 14.75 14 14.75H12.75V16C12.75 16.4142 12.4142 16.75 12 16.75C11.5858 16.75 11.25 16.4142 11.25 16V14.75H10C9.5858 14.75 9.25002 14.4142 9.25002 14C9.25002 13.5858 9.5858 13.25 10 13.25H11.25V12C11.25 11.5858 11.5858 11.25 12 11.25Z" fill="#1C274C"/>
                        </svg>
                    </button>
                    @if (_showFolderNameField)
                    {
                        <InputText @bind-Value="@_newFolderName" />
                        <button  onclick="@(async () => await CreateFolderClick(_newFolderName))" class="btn btn-outline-secondary" type="button">
                            <svg version="1.1"
                                xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" sodipodi:docname="ok.svg" inkscape:version="0.48.4 r9939"
                                xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"  width="20px" height="20px"
                                viewBox="0 0 1200 1200" enable-background="new 0 0 1200 1200" xml:space="preserve">
                            <path id="path15124" inkscape:connector-curvature="0" d="M1004.237,99.152l-611.44,611.441L194.492,512.288L0,706.779
                                l198.305,198.306l195.762,195.763L588.56,906.355L1200,294.916L1004.237,99.152z"/>
                            </svg>
                        </button>
                    }
                    <a class="nav-link dropdown-toggle" role="button" data-bs-toggle="dropdown">
                        <svg width="40px" height="40px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M11 3H13C13.5523 3 14 3.44772 14 4V4.56879C14 4.99659 14.2871 5.36825 14.6822 5.53228C15.0775 5.69638 15.5377 5.63384 15.8403 5.33123L16.2426 4.92891C16.6331 4.53838 17.2663 4.53838 17.6568 4.92891L19.071 6.34312C19.4616 6.73365 19.4615 7.36681 19.071 7.75734L18.6688 8.1596C18.3661 8.46223 18.3036 8.92247 18.4677 9.31774C18.6317 9.71287 19.0034 10 19.4313 10L20 10C20.5523 10 21 10.4477 21 11V13C21 13.5523 20.5523 14 20 14H19.4312C19.0034 14 18.6318 14.2871 18.4677 14.6822C18.3036 15.0775 18.3661 15.5377 18.6688 15.8403L19.071 16.2426C19.4616 16.6331 19.4616 17.2663 19.071 17.6568L17.6568 19.071C17.2663 19.4616 16.6331 19.4616 16.2426 19.071L15.8403 18.6688C15.5377 18.3661 15.0775 18.3036 14.6822 18.4677C14.2871 18.6318 14 19.0034 14 19.4312V20C14 20.5523 13.5523 21 13 21H11C10.4477 21 10 20.5523 10 20V19.4313C10 19.0034 9.71287 18.6317 9.31774 18.4677C8.92247 18.3036 8.46223 18.3661 8.1596 18.6688L7.75732 19.071C7.36679 19.4616 6.73363 19.4616 6.34311 19.071L4.92889 17.6568C4.53837 17.2663 4.53837 16.6331 4.92889 16.2426L5.33123 15.8403C5.63384 15.5377 5.69638 15.0775 5.53228 14.6822C5.36825 14.2871 4.99659 14 4.56879 14H4C3.44772 14 3 13.5523 3 13V11C3 10.4477 3.44772 10 4 10L4.56877 10C4.99658 10 5.36825 9.71288 5.53229 9.31776C5.6964 8.9225 5.63386 8.46229 5.33123 8.15966L4.92891 7.75734C4.53838 7.36681 4.53838 6.73365 4.92891 6.34313L6.34312 4.92891C6.73365 4.53839 7.36681 4.53839 7.75734 4.92891L8.15966 5.33123C8.46228 5.63386 8.9225 5.6964 9.31776 5.53229C9.71288 5.36825 10 4.99658 10 4.56876V4C10 3.44772 10.4477 3 11 3Z" stroke="#000000" stroke-width="1.5"/>
                            <path d="M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z" stroke="#000000" stroke-width="1.5"/>
                        </svg>
                    </a>
                    <ul class="dropdown-menu  dropdown-menu-end">
                        <li><a class="dropdown-item" @onclick="@ShowFolderModalMove" >Move</a></li>
                        <li><a class="dropdown-item" @onclick="@ShowFolderModalCopy" >Copy</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" @onclick="@(async () => await DeleteRangeClick())">Delete</a></li>
                    </ul>
                </div>
                <div>
                    <div class="btn-group btn-group-toggle" data-toggle="buttons">
                        <label class="btn btn-default icon-btn md-btn-flat active"> <input type="radio" name="file-manager-view" value="file-manager-col-view" checked="" /> <span class="ion ion-md-apps"></span> </label>
                        <label class="btn btn-default icon-btn md-btn-flat"> <input type="radio" name="file-manager-view" value="file-manager-row-view" /> <span class="ion ion-md-menu"></span> </label>
                    </div>
                </div>
            </div>

            <hr class="m-0" />
        </div>

        <div class="file-manager-container file-manager-col-view">
            <div class="file-manager-row-header">
                <div class="file-item-name pb-2">Filename</div>
                <div class="file-item-changed pb-2">Changed</div>
            </div>
                @if (_currentFolder.ParentFolderId is not null)
                {
                    <div class="file-item" @onclick="@(() => ChangeCurrentFolder(_storage.Folders.Find(x => x.Id == _currentFolder.ParentFolderId)))">
                            <svg width="100px" height="120px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M9.99999 11L5.99999 15M5.99999 15L9.99999 19M5.99999 15H17C18.1046 15 19 14.107 19 13.0025C19 10.0901 19 4.92333 19 4" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                        <a class="file-item-name">
                            ...
                        </a>
                    </div>
                }

                @foreach(var folder in _storage.Folders.Where(x => x.ParentFolderId == _currentFolder.Id))
                {
                    <ExplorerItem Name="@folder.Name" OnClickCallback="@(() => ChangeCurrentFolder(folder))" DownloadCallback="@(() => DownloadFolderClick(folder))">
                        @* onclick="@(() => ChangeCurrentFolder(folder))" *@
                        <CheckBox>
                            <input type="checkbox" class="custom-control-input" @bind="@folder.IsSelected" @onclick="@(() => folder.IsSelected = !folder.IsSelected)">
                        </CheckBox>    
                        <Preview>
                            <svg width="120px" height="120px" viewBox="0 0 20 20" version="1.1" xmlns="http://www.w3.org/2000/svg">
                                <g id="layer1">
                                    <path d="M 12 2 L 10 4 L 0 4 L 0 18 L 20 18 L 20 4 L 20 2 L 12 2 z M 12.646484 3 L 19 3 L 19 4 L 11.646484 4 L 12.646484 3 z M 1 5 L 19 5 L 19 17 L 1 17 L 1 5 z" style="fill:#222222; fill-opacity:1; stroke:none; stroke-width:0px;"/>
                                </g>
                            </svg>
                        </Preview>
                    </ExplorerItem>
                }


                @foreach(var file in _storage.Files.Where(x => x.ParentFolderId == _currentFolder.Id))
                {
                    <ExplorerItem Name="@file.Name" DownloadCallback="@(() => DownloadFileClick(file))">
                        @* onclick="@(() => ChangeCurrentFolder(folder))" *@
                        <CheckBox>
                            <input type="checkbox" class="custom-control-input"  @bind="@file.IsSelected" @onclick="@(() => file.IsSelected = !file.IsSelected)">
                        </CheckBox>    
                        <Preview>
                            @switch (file.Type)
                                {
                                    case FileType.Image: 
                                    <img src="data:image;base64,@file.Preview" width="120px" height="120px" />
                                    break;
                                    case FileType.Video: <svg width="120px" height="120px" viewBox="0 0 20 20" version="1.1" xmlns="http://www.w3.org/2000/svg">
                                    <g id="layer1">
                                    <path style="fill:#222222; fill-opacity:1; stroke:none; stroke-width:0px;" d="M 0 3 L 0 17 L 20 17 L 20 3 L 0 3 z M 1 4 L 19 4 L 19 16 L 1 16 L 1 4 z M 2 5 L 2 6 L 3 6 L 3 5 L 2 5 z M 17 5 L 17 6 L 18 6 L 18 5 L 17 5 z M 7 6.1171875 L 7 13.882812 L 7.7578125 13.429688 L 13.472656 10 L 7 6.1171875 z M 8 7.8847656 L 11.525391 10 L 8 12.115234 L 8 7.8847656 z M 2 8 L 2 9 L 3 9 L 3 8 L 2 8 z M 17 8 L 17 9 L 18 9 L 18 8 L 17 8 z M 2 11 L 2 12 L 3 12 L 3 11 L 2 11 z M 17 11 L 17 12 L 18 12 L 18 11 L 17 11 z M 2 14 L 2 15 L 3 15 L 3 14 L 2 14 z M 17 14 L 17 15 L 18 15 L 18 14 L 17 14 z "/>
                                    </g>
                                    </svg>
                                    break;
                                    case FileType.Audio: <svg width="120px" height="120px" viewBox="0 0 20 20" version="1.1" xmlns="http://www.w3.org/2000/svg">
                                        <g id="layer1">
                                           <path d="M 3 0 L 3 20 L 17 20 L 17 5 L 17 4 L 13 0 L 12 0 L 3 0 z M 4 1 L 12 1 L 12 4 L 12 5 L 16 5 L 16 19 L 4 19 L 4 1 z M 13 1.3535156 L 15.646484 4 L 13 4 L 13 1.3535156 z M 8.4765625 7.9960938 C 8.1744367 8.0061744 7.950272 8.2799493 8 8.578125 L 8 13.271484 C 7.6963044 13.094712 7.3513949 13.001074 7 13 C 5.8954305 13 5 13.895431 5 15 C 5 16.104569 5.8954305 17 7 17 C 8.1045695 17 9 16.104569 9 15 L 9 11.261719 C 9.1931497 11.339719 9.3502477 11.414609 9.6171875 11.496094 C 10.407606 11.737372 11.550935 11.956978 13 11.986328 L 13 14.271484 C 12.696304 14.094712 12.351395 14.001074 12 14 C 10.895431 14 10 14.895431 10 16 C 10 17.104569 10.895431 18 12 18 C 13.10457 18 14 17.104569 14 16 L 14 9.5507812 C 14.030439 9.252714 13.793716 8.9949692 13.494141 9 C 11.897862 9.0218002 10.699832 8.7807106 9.9082031 8.5390625 C 9.116574 8.2974144 8.7617186 8.0742186 8.7617188 8.0742188 C 8.6767144 8.0200293 8.5773165 7.9927969 8.4765625 7.9960938 z M 9 9.2617188 C 9.1931497 9.3397213 9.3502478 9.4146092 9.6171875 9.4960938 C 10.407606 9.7373723 11.550935 9.9569785 13 9.9863281 L 13 10.986328 C 11.657387 10.95708 10.61275 10.75413 9.9082031 10.539062 C 9.4569593 10.40132 9.1825813 10.285098 9 10.197266 L 9 9.2617188 z M 7 14 C 7.5522847 14 8 14.447715 8 15 C 8 15.552285 7.5522847 16 7 16 C 6.4477153 16 6 15.552285 6 15 C 6 14.447715 6.4477153 14 7 14 z M 12 15 C 12.552285 15 13 15.447715 13 16 C 13 16.552285 12.552285 17 12 17 C 11.447715 17 11 16.552285 11 16 C 11 15.447715 11.447715 15 12 15 z " style="fill:#222222; fill-opacity:1; stroke:none; stroke-width:0px;"/>
                                        </g>
                                    </svg>
                                    break;
                                    case FileType.Document: <svg width="120px" height="120px" viewBox="0 0 20 20" version="1.1" xmlns="http://www.w3.org/2000/svg">
                                        <g id="layer1">
                                            <path d="M 3 0 L 3 20 L 17 20 L 17 5 L 17 4 L 13 0 L 12 0 L 3 0 z M 4 1 L 12 1 L 12 4 L 12 5 L 16 5 L 16 19 L 4 19 L 4 1 z M 13 1.3535156 L 15.646484 4 L 13 4 L 13 1.3535156 z M 5 7 L 5 8 L 15 8 L 15 7 L 5 7 z M 5 9 L 5 10 L 15 10 L 15 9 L 5 9 z M 5 11 L 5 12 L 15 12 L 15 11 L 5 11 z M 5 13 L 5 14 L 15 14 L 15 13 L 5 13 z M 5 15 L 5 16 L 15 16 L 15 15 L 5 15 z " style="fill:#222222; fill-opacity:1; stroke:none; stroke-width:0px;"/>
                                        </g>
                                    </svg>
                                    break;
                                    case FileType.Archive: <svg width="800px" height="800px" viewBox="0 0 20 20" version="1.1" xmlns="http://www.w3.org/2000/svg">
                                    <g id="layer1">
                                    <path d="M 3 0 L 3 20 L 17 20 L 17 5 L 17 4 L 13 0 L 12 0 L 10 0 L 10 1 L 12 1 L 12 4 L 12 5 L 16 5 L 16 19 L 4 19 L 4 1 L 6 1 L 6 0 L 3 0 z M 8 0 L 8 1 L 9 1 L 9 0 L 8 0 z M 8 1 L 7 1 L 7 2 L 8 2 L 8 1 z M 8 2 L 8 3 L 9 3 L 9 2 L 8 2 z M 8 3 L 7 3 L 7 4 L 8 4 L 8 3 z M 8 4 L 8 5 L 9 5 L 9 4 L 8 4 z M 8 5 L 7 5 L 7 6 L 8 6 L 8 5 z M 8 6 L 8 7 L 9 7 L 9 6 L 8 6 z M 8 7 L 7 7 L 7 8 L 8 8 L 8 7 z M 8 8 L 8 9 L 9 9 L 9 8 L 8 8 z M 8 9 L 7 9 L 7 10 L 8 10 L 8 9 z M 13 1.3535156 L 15.646484 4 L 13 4 L 13 1.3535156 z M 7 11 L 6 15 L 6 18 L 10 18 L 10 15 L 9 11 L 7 11 z M 7 16 L 9 16 L 9 17 L 7 17 L 7 16 z " style="fill:#222222; fill-opacity:1; stroke:none; stroke-width:0px;"/>
                                    </g>
                                    </svg>
                                    break;
                                    case FileType.Executable: <svg width="800px" height="800px" viewBox="0 0 20 20" version="1.1" xmlns="http://www.w3.org/2000/svg">
                                        <g id="layer1">
                                            <path style="fill:#222222; fill-opacity:1; stroke:none; stroke-width:0px;" d="M 0 3 L 0 17 L 20 17 L 20 3 L 0 3 z M 1 4 L 19 4 L 19 16 L 1 16 L 1 4 z M 2 5 L 2 6 L 3 6 L 3 5 L 2 5 z M 17 5 L 17 6 L 18 6 L 18 5 L 17 5 z M 7 6.1171875 L 7 13.882812 L 7.7578125 13.429688 L 13.472656 10 L 7 6.1171875 z M 8 7.8847656 L 11.525391 10 L 8 12.115234 L 8 7.8847656 z M 2 8 L 2 9 L 3 9 L 3 8 L 2 8 z M 17 8 L 17 9 L 18 9 L 18 8 L 17 8 z M 2 11 L 2 12 L 3 12 L 3 11 L 2 11 z M 17 11 L 17 12 L 18 12 L 18 11 L 17 11 z M 2 14 L 2 15 L 3 15 L 3 14 L 2 14 z M 17 14 L 17 15 L 18 15 L 18 14 L 17 14 z "/>
                                        </g>
                                    </svg>
                                    break;
                                    default: <svg height="100px" width="100px" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512 512" xml:space="preserve">
                                        <path style="fill:#000000;" d="M310.624,0H64v512h384V137.376L310.624,0z M320,54.624L393.376,128H320V54.624z M96,480V32h192v128  h128v320H96z"/>
                                        <circle style="fill:#000608;" cx="256" cy="400" r="16"/>
                                        <path style="fill:#000000;" d="M272,368h-32v-64h16c17.648,0,32-14.352,32-32s-14.352-32-32-32s-32,14.352-32,32h-32  c0-35.296,28.704-64,64-64s64,28.704,64,64c0,29.76-20.416,54.864-48,61.968V368z"/>
                                    </svg>
                                    break;
                                }
                        </Preview>
                    </ExplorerItem>
                }
        </div>
    </div>
}

@code
{
    private bool _renderReady = false;
    private bool _showFolderNameField = false;
    private string _showFolderModal = "none;";
    private ModalState? _modalState = null;
    private BlazDriveViewModel _storage;
    private FolderViewModel _currentFolder;
    private FolderViewModel? _destinationFolder;
    private IList<FolderViewModel> _expandedNodes = new List<FolderViewModel>();
    private List<FolderViewModel> _currentPath = [];
    private string _newFolderName;

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
        var root = await _accountInfoService.GetRootFolderId();
        _currentFolder = _storage.Folders.FirstOrDefault(x => x.Id == Guid.Parse(root));
        _renderReady = true;
    }

    private async Task Refresh()
    {
        if(await _accountInfoService.GetRootFolderId() is null)
            _navigation.NavigateTo("/blazdrive", true);
        await _blazDriveService.RefreshFullAsync(Guid.Parse(await _accountInfoService.GetRootFolderId()));
        _storage = _blazDriveService.BlazDriveViewModel;
    }

    private async Task CreateFolderClick(string name)
    {
        if(string.IsNullOrWhiteSpace(name) || name.Length == 0) return;
        await _blazDriveService.CreateFolder(_currentFolder.Id, name);
        await Refresh();
    }

    private async Task DeleteRangeClick()
    {
        var fileIds = _storage.Files.Where(x => x.IsSelected).Select(x => x.Id);
        var folderIds = _storage.Folders.Where(x => x.IsSelected).Select(x => x.Id);
        if (folderIds.Count() == 0 && fileIds.Count() == 0) return; 
        foreach (var id in fileIds)
        {
            await _blazDriveService.DeleteFile(id);
        }
        foreach (var id in folderIds)
        {
            await _blazDriveService.DeleteFolder(id);
        }
        await Refresh();
    }
    
    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        await _blazDriveService.UploadFile(e.GetMultipleFiles(10), await _accountInfoService.GetRootFolderId(), _currentFolder.Id);
        await Refresh();
    }

    private async Task MoveSelected(Guid destinationFolderId)
    {
        foreach (var file in _storage.Files.Where(x => x.IsSelected))
        {
            await _blazDriveService.MoveFile(file.Id, destinationFolderId);
        }
        foreach (var folder in _storage.Folders.Where(x => x.IsSelected))
        {
            await _blazDriveService.MoveFolder(folder.Id, destinationFolderId);
        }
        await Refresh();
    }

    private async Task CopySelected(Guid destinationFolderId)
    {
        foreach (var file in _storage.Files.Where(x => x.IsSelected))
        {
            await _blazDriveService.CopyFile(file.Id, destinationFolderId);
        }
        foreach (var folder in _storage.Folders.Where(x => x.IsSelected))
        {
            await _blazDriveService.CopyFolder(folder.Id, destinationFolderId);
        }
        await Refresh();
    }

    private async Task DownloadFileClick(FileViewModel file)
    {
        var key = await _blazDriveService.PrepareDownloadFile(file.Id, file.RootFolderId, file.Name, await _accountInfoService.GetGuid());
        _navigation.NavigateTo($"download/file/{key}");
        
    }

    private async Task DownloadFolderClick(FolderViewModel folder)
    {
        var key = await _blazDriveService.PrepareDownloadFolder(folder.RootFolderId, folder.Id, folder.Name, await _accountInfoService.GetGuid());
        _navigation.NavigateTo($"download/file/{key}");
        
    }

    private void ChangeCurrentFolder(FolderViewModel folder)
    {
        foreach (var f in _storage.Folders)
            f.IsSelected = false;
        foreach (var f in _storage.Files)
            f.IsSelected = false;
        _currentFolder = folder;
        RefreshCurrentPath();
    }

    private void ShowNewFolderNameField()
    {
        _showFolderNameField = !_showFolderNameField;
    }
    
    private void HideFolderModal()
    {
        _showFolderModal = "none;";
        _modalState = null;
    }

    private void ShowFolderModalMove()
    {
        if (!_storage.Files.Any(x => x.IsSelected) && !_storage.Folders.Any(x => x.IsSelected)) return;
        _modalState = ModalState.Move;
        _showFolderModal = "block;";
    }

    private void ShowFolderModalCopy()
    {
        if (!_storage.Files.Any(x => x.IsSelected) && !_storage.Folders.Any(x => x.IsSelected)) return;
        _modalState = ModalState.Copy;
        _showFolderModal = "block;";
    }

    private void RefreshCurrentPath()
    {
        var res = new List<FolderViewModel>();
        var f = _storage.Folders.FirstOrDefault(x => x.Id == _currentFolder.ParentFolderId);
        while (f is not null)
        {
            res.Add(f);
            f = _storage.Folders.FirstOrDefault(x => x.Id == f.ParentFolderId);
        }
        res.Reverse();
        _currentPath = res;
    }

}