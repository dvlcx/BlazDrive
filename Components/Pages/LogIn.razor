@page "/login"
@layout EmptyLayout
@rendermode InteractiveServer
@inject AccountMainService _accountService
@inject NavigationManager _navigationManager

<PageTitle>Log In</PageTitle>

<EditForm Model="UserLogIn" OnValidSubmit="LogInClick" class="vh-100 bg-secondary">
   <AuthCard>
      <h2 class="text-uppercase text-center mb-5">LOG IN</h2>
      @if(!_isLoginSuccesful)
      {
         <h3 class="text-danger text-center">
            <p>LogIn failed. Check your inputs.</p>
         </h3>
      }
      <DataAnnotationsValidator />  
      <div class="mb-3">
         <label class="form-label">Email Address</label>
         <InputText @bind-Value=UserLogIn.Email class="form-control" />
         <ValidationMessage For="() => UserLogIn.Email" />
      </div>
      <div class="mb-3">
         <label for="Password" class="form-label">Password</label>
         <InputText type="password" @bind-Value=UserLogIn.Password class="form-control" />
         <ValidationMessage For="() => UserLogIn.Password" />
      </div>
      <div class="mb-3 d-flex justify-content-center">
         <button class="btn btn-primary">Submit</button>
      </div>
      <p class="text-center text-muted mt-3 mb-0">New here? <a href="/signup"
         class="fw-bold text-body"><u>Sign Up</u></a></p>
      <p class="text-center mt-3"><a href="/" class="fw-bold text-center text-body"><u>Home</u></a></p>
   </AuthCard>
</EditForm>

@code
{
   private UserLogIn UserLogIn { get; set; } = new();
   private bool _isLoginSuccesful { get; set; } = true;
   private async Task LogInClick()
   {
      var key = await _accountService.LogIn(UserLogIn.Email, UserLogIn.Password);
      if (key is not null) _navigationManager.NavigateTo($"/login/{key}");
      else _isLoginSuccesful = false;
   }
}
